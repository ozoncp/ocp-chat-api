version: '3.3'

services:
  ocp-chat-api:
    image: repo_addr.com/ocp-development-group/ocp-chat-api:${TAG}
    build: .
    restart: always
    env_file:
      - cmd/ocp-chat-api/conf.env
    ports:
      - 8888:80
      - 5300:5300

    depends_on:
      - db
      - zoo
      - kafka-1

    networks:
      - backend

  db:
    image: repo_addr.com/ocp-development-group/postgres:${TAG}
    build: third_party/db
    restart: always
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: example
      POSTGRES_DB: chat_db
    volumes:
      - ${PWD}/third_party/db/postgres_data:/var/lib/postgresql
    ports:
      - 5432:5432

    networks:
      - backend

  zoo:
    image: zookeeper:3.5.6
    hostname: test-zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=test-zoo:2888:3888;2181
    networks:
      - backend

  kafka-1:
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "19094:19094"
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://kafka-1:9094,FOR_HOST://kafka-1:19094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://kafka-1:9094,FOR_HOST://localhost:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT,FOR_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo
    networks:
      - backend

networks:
  backend:
