version: '3.3'

services:
  ocp-chat-api:
    image: repo_addr.com/ocp-development-group/ocp-chat-api:${TAG}
    build: .
    restart: always
    env_file:
      - cmd/ocp-chat-api/conf.env
    ports:
      - 8888:80
      - 5300:5300

    depends_on:
      - db

    networks:
      - backend

  db:
    image: repo_addr.com/ocp-development-group/postgres:${TAG}
    build: third_party/db
    restart: always
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: example
      POSTGRES_DB: chat_db
    volumes:
      - ${PWD}/third_party/db/postgres_data:/var/lib/postgresql
    ports:
      - 5432:5432
    networks:
      - backend

  zookeeper:
    image: wurstmeister/zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "32181:2181"
    volumes:
      - ${PWD}/third_party/kafka/data:/var/lib/kafka/data



  kafka:
    image: confluentinc/cp-kafka:6.2.0
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ${PWD}/third_party/kafka/data:/var/lib/kafka/data

networks:
  backend:
