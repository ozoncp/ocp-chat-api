version: '3.3'

services:
  ocp-chat-api:
    image: repo_addr.com/ocp-development-group/ocp-chat-api:${TAG}
    build: .
    restart: always
    env_file:
      - cmd/ocp-chat-api/conf.env
    ports:
      - 8888:80
      - 5300:5300

    depends_on:
      - db
      - zookeeper
      - kafka

    networks:
      - backend

  db:
    image: repo_addr.com/ocp-development-group/postgres:${TAG}
    build: third_party/db
    restart: always
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: example
      POSTGRES_DB: chat_db
    volumes:
      - ${PWD}/third_party/db/postgres_data:/var/lib/postgresql
    ports:
      - 5432:5432
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "32181:32181"
    volumes:
      - ${PWD}/third_party/kafka/data:/var/lib/kafka/data
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:5.1.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
#    volumes:
#      - ${PWD}/third_party/kafka/data:/var/lib/kafka/data
    networks:
      - backend


networks:
  backend:
