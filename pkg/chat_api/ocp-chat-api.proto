syntax = "proto3";

option go_package = "./;chat_api";

package chat_api;

service ChatApi {
    rpc CreateChat (CreateChatRequest) returns (CreateChatResponse);
    rpc DescribeChat (DescribeChatRequest) returns (DescribeChatResponse);
    rpc ListChats (ListChatsRequest) returns (ListChatsResponse);
    rpc RemoveChat (RemoveChatRequest) returns (RemoveChatResponse);
}

message CreateChatRequest {
    uint64 classroom_id = 1;
    string link = 2;
}

message CreateChatResponse {
    uint64 id = 1;
    string message = 2;
}

message DescribeChatRequest {
    uint64 id = 1;
}

message DescribeChatResponse {
    ChatInstance chat = 1;
}

message ListChatsRequest {}

message ChatInstance {
    uint64 id = 1;
    uint64 classroom_id = 2;
    string link = 3;
}

message ListChatsResponse {
    repeated ChatInstance packet = 1;
}

message RemoveChatRequest {
    uint64 id = 1;
}

message RemoveChatResponse {}

// Допустим много запросов от какого-то клиента.
// Тысяча обращений к базе это плохо.
// Мой сервис должен отвечать за то,чтобы в базу оно записалось.
// Потребитель может хотеть а может не хотеть получить результат.
// Допустим читаю из кафки событие что создался новый чат.
// Обрабатываю 200 такис хообщений, их прям много.
// Нужна сущность которая это буферизирует (я читаю из кафки 1000 соообщений, разбиваю их на чанки допустим по 200 и пишу в базу.
// Вот за это и будте отвечать сейвер (он взаимодействует с кафкой с одной стороны и с базой в другом)
// ***в колоночные таблицы нужно писать оень большими порциями. и данные эти вообще не важны.
// Сейвер будет не для кафки, а для аналитического стораджа! в сейвер я сижу и накапливаю чатики,
// постоянно сбрасываю их в базу (надежно) и если в базу смогло сброситься = кидаю сейверу,
// который раз в какое-то время пишет это в условный кликхаус аналитикам.


// почему засовывать его в internal - потому что пакет будут импортировать и логику работы не надо раскрывать.
// экспортировать должны только сгенеренные файлы. чтобы пользовать клиент для моего сервиса. надо чтобы они были в internal зоне
// а сгенеренные файлы - в публичном доступе. proto-файл будет в публичном доступе. а логика работы моего сервиса - моя приватная.

// мерж ассайнить славу и вову
