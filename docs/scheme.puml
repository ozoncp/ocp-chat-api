@startuml

interface Service {
	CreateChat(Context, classroom uint64, link string) (*chat.Chat, error)
	DescribeChat(Context, id uint64) (*Chat, error)
	RemoveChat(Context, id uint64) error
	ListChats(Context) ([]*Chat, error)

}

interface Saver {
    Save(ctx context.Context, ch *chat.Chat) error
}

interface Flusher {
    Flush(Context, FlushableChatRepo, []*Chat) error
}

interface FlushableRepo {
    AddBatch(Context, []*Chat) error
}
interface Repo {
    GetAll(Context) ([]*Chat, error)
	Insert(Context, classroomID uint64, link string) (*chat.Chat, error)
	Describe(Context, chatID uint64) (*Chat, error)
	Remove(Context, chatID uint64) error
}

grpcAPI --> Service
Service --> grpcAPIService
'clickhouse
grpcAPIService --> Saver
Saver --> BufferingSaver
BufferingSaver --> Flusher
BufferingSaver --> FlushableRepo
Flusher --> ClickhouseFlusher
ClickhouseFlusher -> FlushableRepo
FlushableRepo --> InMemoryRepo1
note right on link
statisticsRepo
(later will be ClickhouseRepo,
now stub here)
end note


'postgres chat storage
grpcAPIService --> Repo
Repo --> PostgresRepo
note right on link
chatStorage
end note

'kafka
grpcAPIService --> Repo
Repo --> InMemoryRepo
note right on link
queueRepo
(later will be KafkaRepo,
now stub here)
end note

@enduml