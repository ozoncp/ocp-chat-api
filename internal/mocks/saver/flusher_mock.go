// Code generated by MockGen. DO NOT EDIT.
// Source: ./saver.go

// Package saver is a generated GoMock package.
package saver

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	chat "github.com/ozoncp/ocp-chat-api/internal/chat"
	chat_flusher "github.com/ozoncp/ocp-chat-api/internal/chat_flusher"
)

// MockFlusher is a mock of Flusher interface.
type MockFlusher struct {
	ctrl     *gomock.Controller
	recorder *MockFlusherMockRecorder
}

// MockFlusherMockRecorder is the mock recorder for MockFlusher.
type MockFlusherMockRecorder struct {
	mock *MockFlusher
}

// NewMockFlusher creates a new mock instance.
func NewMockFlusher(ctrl *gomock.Controller) *MockFlusher {
	mock := &MockFlusher{ctrl: ctrl}
	mock.recorder = &MockFlusherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFlusher) EXPECT() *MockFlusherMockRecorder {
	return m.recorder
}

// Flush mocks base method.
func (m *MockFlusher) Flush(ctx context.Context, repo chat_flusher.FlushableChatRepo, chats []*chat.Chat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Flush", ctx, repo, chats)
	ret0, _ := ret[0].(error)
	return ret0
}

// Flush indicates an expected call of Flush.
func (mr *MockFlusherMockRecorder) Flush(ctx, repo, chats interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockFlusher)(nil).Flush), ctx, repo, chats)
}

// MockBatchRepo is a mock of BatchRepo interface.
type MockBatchRepo struct {
	ctrl     *gomock.Controller
	recorder *MockBatchRepoMockRecorder
}

// MockBatchRepoMockRecorder is the mock recorder for MockBatchRepo.
type MockBatchRepoMockRecorder struct {
	mock *MockBatchRepo
}

// NewMockBatchRepo creates a new mock instance.
func NewMockBatchRepo(ctrl *gomock.Controller) *MockBatchRepo {
	mock := &MockBatchRepo{ctrl: ctrl}
	mock.recorder = &MockBatchRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBatchRepo) EXPECT() *MockBatchRepoMockRecorder {
	return m.recorder
}

// AddBatch mocks base method.
func (m *MockBatchRepo) AddBatch(ctx context.Context, chats []*chat.Chat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddBatch", ctx, chats)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddBatch indicates an expected call of AddBatch.
func (mr *MockBatchRepoMockRecorder) AddBatch(ctx, chats interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddBatch", reflect.TypeOf((*MockBatchRepo)(nil).AddBatch), ctx, chats)
}
